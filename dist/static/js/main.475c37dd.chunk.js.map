{"version":3,"sources":["tools/axios.ts","app/service.ts","app/app.tsx","reportWebVitals.ts","index.tsx"],"names":["httpClientTesting","data","error","Promise","done","reject","setTimeout","status","statusText","headers","undefined","config","response","wrapper","loading","pristine","valid","heroes","name","level","Container","styled","div","Gap","Title","h1","Optional","props","test","children","request","initialValue","source","useState","payload","setPayload","setStatus","exec","promise","onSuccess","res","onError","err","options","src","clearPayloadBeforeExec","then","catch","defaultErrorMsg","reset","cancel","useAction","execHeroes","slice","Math","floor","random","length","console","log","execVillains","onClick","map","row","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.475c37dd.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport axios, {\r\n  AxiosRequestConfig,\r\n  AxiosResponse,\r\n  CancelTokenSource,\r\n  AxiosError\r\n} from 'axios';\r\n\r\nexport type Response<T> = Promise<AxiosResponse<T>>;\r\nexport type Error = AxiosError;\r\nexport type Source = CancelTokenSource;\r\nexport type Axios<T> = [Response<T>, Source | undefined];\r\n\r\nexport function httpClient<T>(params: AxiosRequestConfig): Axios<T> {\r\n  const source = axios.CancelToken.source();\r\n  return [\r\n    axios.request<T>({ ...params, cancelToken: source.token }),\r\n    source\r\n  ];\r\n}\r\n\r\nexport function httpClientTesting<T>(data: T | undefined, error?: string): Axios<T> {\r\n  return [\r\n    new Promise((done, reject) => {\r\n      if (!error && !!data) {\r\n        setTimeout(\r\n          () => done({ status: 200, data, statusText: '', headers: undefined, config: {} }),\r\n          2000\r\n        );\r\n      } else {\r\n        setTimeout(\r\n          () => reject({ response: { data: error || 'Empty error message!' } }),\r\n          2000\r\n        );\r\n      }\r\n    }),\r\n    undefined\r\n  ];\r\n}\r\n\r\nexport interface Status {\r\n  loading: boolean;\r\n  error: string;\r\n  pristine: boolean;\r\n  valid: boolean;\r\n}\r\n\r\nexport interface Options {\r\n  defaultErrorMsg?: string;\r\n  clearPayloadBeforeExec?: boolean;\r\n}\r\n\r\nconst wrapper = (\r\n  loading = false, error = '', pristine = true, valid = false\r\n) => ({\r\n  loading, error, pristine, valid\r\n});\r\n\r\nexport function useAction<T>(initialValue?: T) {\r\n  const [payload, setPayload] = useState<T | undefined>(initialValue);\r\n  const [status, setStatus] = useState<Status>(wrapper());\r\n  let source: Source | undefined;\r\n\r\n  function exec(\r\n    promise: Axios<T>,\r\n    onSuccess = (res: T) => { },\r\n    onError = (err: Error) => { },\r\n    options?: Options\r\n  ) {\r\n    const [request, src] = promise;\r\n    source = src;\r\n    setStatus(wrapper(true, ''));\r\n    if (options?.clearPayloadBeforeExec) {\r\n      setPayload(undefined);\r\n    }\r\n    request\r\n      .then((response) => {\r\n        onSuccess(response.data);\r\n        setStatus(wrapper(false, '', false, true));\r\n        setPayload(response.data);\r\n      })\r\n      .catch(({ response }) => {\r\n        onError(response);\r\n        setStatus(wrapper(\r\n          false,\r\n          response?.data || options?.defaultErrorMsg,\r\n          false\r\n        ));\r\n      });\r\n  }\r\n\r\n  function reset() {\r\n    setStatus(wrapper());\r\n    setPayload(undefined);\r\n  }\r\n\r\n  function cancel() {\r\n    source?.cancel();\r\n  }\r\n\r\n  return { payload, ...status, exec, reset, cancel };\r\n}\r\n","// import { httpClient } from 'src/tools/axios';\r\nimport { httpClientTesting } from 'src/tools/axios';\r\n\r\nexport interface Hero {\r\n  name: string;\r\n  level: number;\r\n}\r\n\r\nconst heroes: Hero[] = [\r\n  { name: 'Peter', level: 25 },\r\n  { name: 'Tony', level: 50 },\r\n  { name: 'Stephen', level: 99 }\r\n];\r\n\r\nexport function getHeroes() {\r\n  const randomHeroes = heroes.slice(0, Math.floor(Math.random() * heroes.length));\r\n  return httpClientTesting<Hero[]>(randomHeroes);\r\n  // return httpClient<Hero[]>({ url: `/api/heroes` });\r\n}\r\n\r\nexport function getVillains() {\r\n  return httpClientTesting<Hero[]>(undefined, 'You shall not pass...');\r\n}\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useAction } from 'src/tools/axios';\nimport { Hero, getHeroes, getVillains } from './service';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n`;\n\nconst Gap = styled.div`\n  & > * {\n    margin: 0 .5rem .5rem;\n  }\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst Optional = (props: { test: boolean, children: any }) => (\n  props.test ? props.children : (<></>)\n);\n\nexport default () => {\n  const request = useAction<Hero[]>();\n\n  function execHeroes() {\n    request.exec(\n      getHeroes(),\n      (response) => console.log('success', response),\n      (error) => console.log('error', error)\n    );\n  }\n\n  function execVillains() {\n    request.exec(\n      getVillains(),\n      (response) => console.log('success', response),\n      (error) => console.log('error', error),\n      { clearPayloadBeforeExec: true }\n    );\n  }\n\n  return (\n    <>\n      <Title>React Hook Actions</Title>\n      <Container>\n        <Gap>\n          <button onClick={() => execHeroes()}>Heroes</button>\n          <button onClick={() => execVillains()}>Villains</button>\n        </Gap>\n        <Optional test={request.loading}>\n          <span>Loading...</span>\n        </Optional>\n        <Optional test={!!request.error}>\n          <span>Error! {request.error}</span>\n        </Optional>\n        <Optional test={request.pristine}>\n          <h4>Click to show table of heroes.</h4>\n        </Optional>\n        <Optional test={!!request.payload}>\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Level</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                request.payload?.map((row, index) => (\n                  <tr key={index}>\n                    <td>{row.name}</td>\n                    <td>{row.level}</td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>\n        </Optional>\n      </Container>\n    </>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}